// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLThuVienMVC.Models;

#nullable disable

namespace QLThuVienMVC.Migrations
{
    [DbContext(typeof(LibDataContext))]
    [Migration("20250510103854_initialcreate")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QLThuVienMVC.Models.BaoCao", b =>
                {
                    b.Property<string>("MaBaoCao")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoaiBaoCao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NgayBaoCao")
                        .HasColumnType("datetime2");

                    b.HasKey("MaBaoCao");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("BaoCao");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.Detail_Lib.ChiTietCungCap", b =>
                {
                    b.Property<string>("MaPhieuCungCap")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSach")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("Gia")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaPhieuCungCap", "MaSach");

                    b.HasIndex("MaSach");

                    b.ToTable("ChiTietCungCap");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.Detail_Lib.ChiTietMuonSach", b =>
                {
                    b.Property<string>("MaPhieuMuon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSach")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NgayPhaiTra")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrangMuon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhieuMuon", "MaSach");

                    b.HasIndex("MaSach");

                    b.ToTable("ChiTietMuonSach");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.Detail_Lib.ChiTietTraSach", b =>
                {
                    b.Property<string>("MaPhieuTra")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSach")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NgayTraThucTe")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SoNgayTre")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrangTra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhieuTra", "MaSach");

                    b.HasIndex("MaSach");

                    b.ToTable("ChiTietTraSach");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.DocGia", b =>
                {
                    b.Property<string>("MaDocGia")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiDocGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NgayLapThe")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDocGia");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("DocGia");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.NhaCungCap", b =>
                {
                    b.Property<string>("MaNhaCungCap")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoDienThoai")
                        .HasColumnType("int");

                    b.Property<string>("TenNhaCungCap")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhaCungCap");

                    b.ToTable("NhaCungCap");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.NhanVien", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BangCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoPhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SoDienThoai")
                        .HasColumnType("int");

                    b.HasKey("MaNhanVien");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.PhieuCungCap", b =>
                {
                    b.Property<string>("MaPhieuCungCap")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhaCungCap")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TongGiaTri")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("MaPhieuCungCap");

                    b.HasIndex("MaNhaCungCap");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("PhieuCungCap");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.PhieuMuonSach", b =>
                {
                    b.Property<string>("MaPhieuMuon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaDocGia")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NgayMuon")
                        .HasColumnType("datetime2");

                    b.HasKey("MaPhieuMuon");

                    b.HasIndex("MaDocGia");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("PhieuMuonSach");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.PhieuThu", b =>
                {
                    b.Property<string>("MaPhieuThu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaDocGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("SoTienThu")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal?>("TienNo")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("MaPhieuThu");

                    b.HasIndex("MaDocGia");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("PhieuThu");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.PhieuTraSach", b =>
                {
                    b.Property<string>("MaPhieuTra")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaDocGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NgayTra")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TienPhat")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("MaPhieuTra");

                    b.HasIndex("MaDocGia");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("PhieuTraSach");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.Sach", b =>
                {
                    b.Property<string>("MaSach")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("GiaTri")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("MaNhaCungCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NamXuatBan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhaXuatBan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TacGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("coverUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSach");

                    b.HasIndex("MaNhaCungCap");

                    b.ToTable("Sach");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.ThanhLySach", b =>
                {
                    b.Property<string>("MaThanhLy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LyDoThanhLy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSach")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NgayThanhLy")
                        .HasColumnType("datetime2");

                    b.HasKey("MaThanhLy");

                    b.HasIndex("MaNhanVien");

                    b.HasIndex("MaSach")
                        .IsUnique();

                    b.ToTable("ThanhLySach");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.UserModel.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaDocGia")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("MaDocGia")
                        .IsUnique()
                        .HasFilter("[MaDocGia] IS NOT NULL");

                    b.HasIndex("MaNhanVien")
                        .IsUnique()
                        .HasFilter("[MaNhanVien] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("QLThuVienMVC.Models.UserModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("QLThuVienMVC.Models.UserModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLThuVienMVC.Models.UserModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("QLThuVienMVC.Models.UserModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QLThuVienMVC.Models.BaoCao", b =>
                {
                    b.HasOne("QLThuVienMVC.Models.NhanVien", "NhanVien")
                        .WithMany("BaoCao")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.Detail_Lib.ChiTietCungCap", b =>
                {
                    b.HasOne("QLThuVienMVC.Models.PhieuCungCap", "PhieuCungCap")
                        .WithMany("ChiTietCungCap")
                        .HasForeignKey("MaPhieuCungCap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLThuVienMVC.Models.Sach", "Sach")
                        .WithMany("ChiTietCungCap")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuCungCap");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.Detail_Lib.ChiTietMuonSach", b =>
                {
                    b.HasOne("QLThuVienMVC.Models.PhieuMuonSach", "PhieuMuonSach")
                        .WithMany("ChiTietMuonSach")
                        .HasForeignKey("MaPhieuMuon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLThuVienMVC.Models.Sach", "Sach")
                        .WithMany("ChiTietMuonSach")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuMuonSach");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.Detail_Lib.ChiTietTraSach", b =>
                {
                    b.HasOne("QLThuVienMVC.Models.PhieuTraSach", "PhieuTraSach")
                        .WithMany("ChiTietTraSach")
                        .HasForeignKey("MaPhieuTra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLThuVienMVC.Models.Sach", "Sach")
                        .WithMany("ChiTietTraSach")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuTraSach");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.DocGia", b =>
                {
                    b.HasOne("QLThuVienMVC.Models.NhanVien", "NhanVien")
                        .WithMany("DocGia")
                        .HasForeignKey("MaNhanVien");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.PhieuCungCap", b =>
                {
                    b.HasOne("QLThuVienMVC.Models.NhaCungCap", "NhaCungCap")
                        .WithMany("PhieuCungCap")
                        .HasForeignKey("MaNhaCungCap");

                    b.HasOne("QLThuVienMVC.Models.NhanVien", "NhanVien")
                        .WithMany("PhieuCungCap")
                        .HasForeignKey("MaNhanVien");

                    b.Navigation("NhaCungCap");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.PhieuMuonSach", b =>
                {
                    b.HasOne("QLThuVienMVC.Models.DocGia", "DocGia")
                        .WithMany("PhieuMuonSach")
                        .HasForeignKey("MaDocGia");

                    b.HasOne("QLThuVienMVC.Models.NhanVien", "NhanVien")
                        .WithMany("PhieuMuonSach")
                        .HasForeignKey("MaNhanVien");

                    b.Navigation("DocGia");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.PhieuThu", b =>
                {
                    b.HasOne("QLThuVienMVC.Models.DocGia", "DocGia")
                        .WithMany("PhieuThu")
                        .HasForeignKey("MaDocGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLThuVienMVC.Models.NhanVien", "NhanVien")
                        .WithMany("PhieuThu")
                        .HasForeignKey("MaNhanVien");

                    b.Navigation("DocGia");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.PhieuTraSach", b =>
                {
                    b.HasOne("QLThuVienMVC.Models.DocGia", "DocGia")
                        .WithMany("PhieuTraSach")
                        .HasForeignKey("MaDocGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLThuVienMVC.Models.NhanVien", "NhanVien")
                        .WithMany("PhieuTraSach")
                        .HasForeignKey("MaNhanVien");

                    b.Navigation("DocGia");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.Sach", b =>
                {
                    b.HasOne("QLThuVienMVC.Models.NhaCungCap", "NhaCungCap")
                        .WithMany("Sach")
                        .HasForeignKey("MaNhaCungCap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhaCungCap");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.ThanhLySach", b =>
                {
                    b.HasOne("QLThuVienMVC.Models.NhanVien", "NhanVien")
                        .WithMany("ThanhLySach")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLThuVienMVC.Models.Sach", "Sach")
                        .WithOne("ThanhLySach")
                        .HasForeignKey("QLThuVienMVC.Models.ThanhLySach", "MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.UserModel.ApplicationUser", b =>
                {
                    b.HasOne("QLThuVienMVC.Models.DocGia", "DocGia")
                        .WithOne("User")
                        .HasForeignKey("QLThuVienMVC.Models.UserModel.ApplicationUser", "MaDocGia");

                    b.HasOne("QLThuVienMVC.Models.NhanVien", "NhanVien")
                        .WithOne("User")
                        .HasForeignKey("QLThuVienMVC.Models.UserModel.ApplicationUser", "MaNhanVien");

                    b.Navigation("DocGia");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.DocGia", b =>
                {
                    b.Navigation("PhieuMuonSach");

                    b.Navigation("PhieuThu");

                    b.Navigation("PhieuTraSach");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.NhaCungCap", b =>
                {
                    b.Navigation("PhieuCungCap");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.NhanVien", b =>
                {
                    b.Navigation("BaoCao");

                    b.Navigation("DocGia");

                    b.Navigation("PhieuCungCap");

                    b.Navigation("PhieuMuonSach");

                    b.Navigation("PhieuThu");

                    b.Navigation("PhieuTraSach");

                    b.Navigation("ThanhLySach");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.PhieuCungCap", b =>
                {
                    b.Navigation("ChiTietCungCap");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.PhieuMuonSach", b =>
                {
                    b.Navigation("ChiTietMuonSach");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.PhieuTraSach", b =>
                {
                    b.Navigation("ChiTietTraSach");
                });

            modelBuilder.Entity("QLThuVienMVC.Models.Sach", b =>
                {
                    b.Navigation("ChiTietCungCap");

                    b.Navigation("ChiTietMuonSach");

                    b.Navigation("ChiTietTraSach");

                    b.Navigation("ThanhLySach");
                });
#pragma warning restore 612, 618
        }
    }
}
